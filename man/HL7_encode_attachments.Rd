% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util.R
\name{HL7_encode_attachments}
\alias{HL7_encode_attachments}
\title{Encode a file description to a jsonlite friendly list}
\usage{
HL7_encode_attachments(file_df)
}
\arguments{
\item{file_df}{A data.frame describingf the input files}
}
\value{
A list that will encode to a JSON fragment
}
\description{
In FH7 FHIR Tasks (and perhaps other types), you can list the required inputs
and produced outputs as a list of values. One legal type is Attachment, which
describes a file. All its fields are optional (except that .data requires .contentType),
and we are using .contentType and .url. The former is a MIME type describing the
format of the file, and the latter can hopefully be a file:// URL giving the file name.
The input list also has a "type" field that can be free text; we have
repurposed it to describe the data modality (e.g. "CT image" or "RNASeq").

The data.frame must have columns named MIME, Description, and Filename.

See
https://www.hl7.org/fhir/task.html
https://www.hl7.org/fhir/datatypes-definitions.html#Attachment
}
\details{
\code{HL7_encode_attachments} takes a data frame describing files and returns something
that will encode to legal HL7 FHIR JSON for an input or output block in a Task.
}
\examples{
files = data.frame(
  Description = c("Survival report", "Survival table"),
  Filename = c("survival_report.pdf", "survival_table.csv"),
  MIME = c("application/pdf", "text/csv")
)
print(HL7_encode_attachments(files))

}
