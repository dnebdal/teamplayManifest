% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/teamplayManifest-package.R
\docType{package}
\name{teamplayManifest}
\alias{teamplayManifest}
\alias{teamplayManifest-package}
\title{teamplayManifest : Create and read manifests for Siemens Teamplay tasks}
\description{
When uploading a job to Siemens Teamplay, some metadata is required. In the original design, this was included in the IDCOM images, but for other data types it needs to be explicitly provided as a HL7 FHIR compatible JSON file. This package automates creating and parsing those.
}
\section{Manipulating Manifests}{

\itemize{
\item \code{\link[=createManifest]{createManifest()}} Generate a manifest with the given input files
\item \code{\link[=readManifest]{readManifest()}} Read a manifest from a file
\item \code{\link[=finalizeManifest]{finalizeManifest()}} Update a manifest to add output files and mark as done
\item \code{\link[=packageManifest]{packageManifest()}} Create a packaged file with input/output files and manifest
\item \code{\link[=manifestToJSON]{manifestToJSON()}} Convert a manifest to a JSON string
}
}

\section{HL7 FHIR Utilities}{

\itemize{
\item \code{\link[=HL7_dateTime]{HL7_dateTime()}} Returns a properly formatted date and time
\item \code{\link[=HL7_encode_attachments]{HL7_encode_attachments()}} Encode a table of files into a manifest file list
\item \code{\link[=HL7_decode_attachments]{HL7_decode_attachments()}} Decode a manifest file list into a file table
}
}

\author{
\strong{Maintainer}: Daniel Nebdal \email{daniel@nebdal.net}

}
\keyword{internal}
